// SDXLModel.js
import React, { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { RiseLoader } from 'react-spinners';
import { handleDownload } from './downloadImage';
import { ToastContainer } from 'react-toastify';

const SDXLModel = ({ userInput, negativePrompt }) => {
  const { sdxlResult, isLoading } = useSelector((state) => state.sdxlImage);
  const [imageBlob, setImageBlob] = useState(null);

  useEffect(() => {
    if (sdxlResult && sdxlResult.images && sdxlResult.images[0] && sdxlResult.images[0].url) {
      const imageUrl = sdxlResult.images[0].url;
      fetch(imageUrl)
        .then((response) => response.blob())
        .then((blob) => setImageBlob(URL.createObjectURL(blob)))
        .catch(console.error);
    }
  }, [sdxlResult]);

  return (
    <div>
      <ToastContainer position="top-center" />
      {isLoading ? (
        <div className="loader-container">
          <RiseLoader color="#08bbd3"/>
        </div>
      ) : (
        imageBlob && (
          <div className="text-center">
            <img src={imageBlob} alt="Generated by SDXL" className="responsive-image" />
            <button className="btn btn-success mt-3" onClick={() => handleDownload(imageBlob, 'sdxl-image.jpeg')}>
              Download Image
            </button>
          </div>
        )
      )}
    </div>
  );
};

export default SDXLModel;
