import React, { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { RiseLoader } from 'react-spinners';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faDownload } from '@fortawesome/free-solid-svg-icons';
import { handleDownload } from './downloadImage'; // Adjust the import path as necessary

const SDXLModel = ({ userInput, negativePrompt }) => {
  const { sdxlResult, isLoading } = useSelector((state) => state.sdxlImage);
  const [imageBlobs, setImageBlobs] = useState([]);

  useEffect(() => {
    if (sdxlResult && sdxlResult.images) {
      const blobsPromises = sdxlResult.images.map(image => 
        fetch(image.url)
          .then(response => response.blob())
          .then(blob => URL.createObjectURL(blob))
      );
      Promise.all(blobsPromises)
        .then(blobs => setImageBlobs(blobs))
        .catch(console.error);
    }
  }, [sdxlResult]);

  const downloadImage = (blob, index) => {
    handleDownload(blob, `sdxl-image-${index}.jpeg`);
  };

  return (
    <div>
      {isLoading ? (
        <div className="loader-container">
          <RiseLoader color="#08bbd3" />
        </div>
      ) : (
        <div className="image-grid">
          {imageBlobs.map((blob, index) => (
            <div key={index} className="image-downloadable" onClick={() => downloadImage(blob, index)}>
              <img src={blob} alt={`Generated by SDXL ${index + 1}`} className="responsive-image" />
              <div className="download-icon">
                <FontAwesomeIcon icon={faDownload} />
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default SDXLModel;
